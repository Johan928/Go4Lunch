Index: app/src/main/java/com/example/go4lunch/details/DetailsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.go4lunch.details;\r\n\r\nimport static com.example.go4lunch.BuildConfig.MAPS_API_KEY;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlarmManager;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.PorterDuff;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.AttributeSet;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.res.ResourcesCompat;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.request.RequestOptions;\r\nimport com.example.go4lunch.Adapter.DetailsAdapter;\r\nimport com.example.go4lunch.R;\r\nimport com.example.go4lunch.databinding.ActivityDetailsBinding;\r\nimport com.example.go4lunch.factory.ViewModelFactory;\r\nimport com.example.go4lunch.receivers.AlarmReceiver;\r\nimport com.example.go4lunch.user.User;\r\nimport com.example.go4lunch.user.UserManager;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\n\r\nimport pub.devrel.easypermissions.AppSettingsDialog;\r\nimport pub.devrel.easypermissions.EasyPermissions;\r\n\r\npublic class DetailsActivity extends AppCompatActivity implements EasyPermissions.PermissionCallbacks {\r\n    private static final int CALL_PERMISSION_REQUEST_CODE = 100;\r\n    private static final String TAG = \"200\";\r\n    private String placeId;\r\n    private ActivityDetailsBinding binding;\r\n    private DetailsViewModel detailsViewModel;\r\n    private TextView textViewCall;\r\n    private String currentPlaceName;\r\n    private String currentPlaceVicinity;\r\n    private String phoneNumber;\r\n    private UserManager userManager = UserManager.getInstance();\r\n    private static final String SELECTED_RESTAURANT_ID = \"selectedRestaurantPlaceId\";\r\n    private static final String FAVORITES_RESTAURANTS_FIELD = \"favoriteRestaurantsList\";\r\n    private String currentSelectedPlace;\r\n    private RecyclerView recyclerView;\r\n    private LinearLayoutManager layoutManager;\r\n    private DetailsAdapter adapter;\r\n    private static final String CHANNEL_ID = \"10\";\r\n    private static final int NOTIFICATION_ID = 0;\r\n    private SharedPreferences sharedPreferences;\r\n    private String sharedPrefFile = \"com.example.go4lunch\";\r\n    private static final String UID_KEY = \"UID\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityDetailsBinding.inflate(getLayoutInflater());\r\n        View view = binding.getRoot();\r\n        setContentView(view);\r\n        if (getIntent() != null) {\r\n            placeId = getIntent().getStringExtra(\"placeId\");\r\n        }\r\n        //get logged user selected place\r\n        getUserSelectedRestaurant();\r\n        //get logged user favorites list\r\n        getUserFavoriteList();\r\n\r\n        detailsViewModel = new ViewModelProvider(this, ViewModelFactory.getInstance()).get(DetailsViewModel.class);\r\n        detailsViewModel.getDetailsViewLiveData(placeId).observe(this, detailsViewState -> {\r\n\r\n            if (detailsViewState.getPlace().getResult() != null && detailsViewState.getUserList() != null) {\r\n\r\n                String url;\r\n                if (detailsViewState.getPlace().getResult().getPhotos() != null) {\r\n                    url = \"https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=\" + detailsViewState.getPlace().getResult().getPhotos().get(0).getPhoto_reference() + \"&key=\" + MAPS_API_KEY;\r\n                    Glide.with(view)\r\n                            .load(url)\r\n                            .apply(RequestOptions.centerInsideTransform())\r\n                            .into((binding.detailsActivityImageViewRestaurantPhoto));\r\n                } else {\r\n                    //On affiche une image par d√©faut\r\n                    Glide.with(view)\r\n                            .load(R.drawable.restaurant)\r\n                            .apply(RequestOptions.centerInsideTransform())\r\n                            .into((binding.detailsActivityImageViewRestaurantPhoto));\r\n\r\n                }\r\n\r\n                binding.detailsActivityTextviewName.setText(detailsViewState.getPlace().getResult().getName());\r\n                binding.detailsActivityTexviewAddress.setText(detailsViewState.getPlace().getResult().getVicinity());\r\n                binding.textViewCall.setTag(detailsViewState.getPlace().getResult().getFormatted_phone_number());\r\n                binding.textViewWebsite.setTag(detailsViewState.getPlace().getResult().getWebsite());\r\n                binding.textViewLike.setTag(placeId);\r\n                binding.detailsActivityFabSelectRestaurant.setTag(placeId);\r\n\r\n                currentPlaceName = detailsViewState.getPlace().getResult().getName();\r\n                currentPlaceVicinity = detailsViewState.getPlace().getResult().getVicinity();\r\n\r\n                initRecyclerView(detailsViewState.getUserList());\r\n            }\r\n        });\r\n\r\n        initListeners();\r\n\r\n    }\r\n\r\n    private void getUserFavoriteList() {\r\n        List<String> favoritesList = new ArrayList<>();\r\n     userManager.getUserData().addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {\r\n         @Override\r\n         public void onSuccess(DocumentSnapshot documentSnapshot) {\r\n        User user = documentSnapshot.toObject(User.class);\r\n        if (user.getFavoriteRestaurantsList() != null && user.getFavoriteRestaurantsList().size() > 0 ) {\r\n            for (String s : user.getFavoriteRestaurantsList()) {\r\n                favoritesList.add(s);\r\n            }\r\n        }\r\n\r\n        if (favoritesList.contains(placeId)) {\r\n            binding.imageviewLikedStar.setVisibility(View.VISIBLE);\r\n            binding.textViewLike.setText(R.string.dislike);\r\n        } else {\r\n            binding.imageviewLikedStar.setVisibility(View.GONE);\r\n            binding.textViewLike.setText(R.string.like);\r\n        }\r\n         }\r\n     });\r\n    }\r\n\r\n    private void initRecyclerView(List<User> userList) {\r\n        recyclerView = binding.recyclerViewDetails;\r\n        layoutManager = new LinearLayoutManager(getApplicationContext());\r\n        recyclerView.setLayoutManager(layoutManager);\r\n        recyclerView.setHasFixedSize(true);\r\n      /*  if (adapter != null) {\r\n            adapter.submitList(userList);\r\n        } else {*/\r\n        adapter = new DetailsAdapter(getApplicationContext(), userList);\r\n        recyclerView.setAdapter(adapter);\r\n        /*}*/\r\n\r\n    }\r\n\r\n    private void addOrRemoveFavoriteRestaurant(String placeId,boolean likedStatus) {\r\n        userManager.updateFavoritesRestaurantList(placeId,likedStatus).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n            @Override\r\n            public void onSuccess(Void unused) {\r\n                if (!likedStatus) {\r\n                    Toast.makeText(getApplicationContext(),getString(R.string.added_to_favorites),Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    Toast.makeText(getApplicationContext(),getString(R.string.removed_from_favorites),Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n\r\n                getUserFavoriteList();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void initListeners() {\r\n        binding.textViewWebsite.setOnClickListener(v -> {\r\n            if (v.getTag() != null && !v.getTag().toString().isEmpty()) {\r\n                launchWebsite(v);\r\n            } else {\r\n                Toast.makeText(getApplicationContext(), getResources().getString(R.string.website_not_specified), Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n        });\r\n        binding.textViewCall.setOnClickListener(v -> {\r\n            phoneNumber = v.getTag().toString();\r\n            String[] perms = {Manifest.permission.CALL_PHONE};\r\n            if (EasyPermissions.hasPermissions(DetailsActivity.this, perms)) {\r\n                if (phoneNumber != null && !phoneNumber.isEmpty()) {\r\n                    callNow();\r\n                }\r\n            } else {\r\n                EasyPermissions.requestPermissions(DetailsActivity.this, getString(R.string.permission_rationale_call), CALL_PERMISSION_REQUEST_CODE, perms);\r\n            }\r\n        });\r\n        binding.textViewLike.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                boolean likedStatus;\r\n                if (binding.imageviewLikedStar.getVisibility() == View.GONE) {\r\n                    likedStatus = false;\r\n                } else {likedStatus = true;}\r\n                addOrRemoveFavoriteRestaurant(v.getTag().toString(),likedStatus);\r\n            }\r\n        });\r\n        binding.detailsActivityFabSelectRestaurant.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if (currentSelectedPlace == null || !currentSelectedPlace.equals(placeId)) {\r\n                    userManager.updateSelectedRestaurant(v.getTag().toString(), currentPlaceName, currentPlaceVicinity)\r\n                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void unused) {\r\n                                    Toast.makeText(v.getContext(), getString(R.string.choice_recorded), Toast.LENGTH_SHORT).show();\r\n                                    getUserSelectedRestaurant();\r\n                                    registerAlarm();\r\n                                }\r\n                            })\r\n                            .addOnFailureListener(new OnFailureListener() {\r\n                                @Override\r\n                                public void onFailure(@NonNull Exception e) {\r\n                                    Toast.makeText(v.getContext(), getString(R.string.unable_to_record_choice), Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n                } else {\r\n                    userManager.updateSelectedRestaurant(null, null, null)\r\n                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void unused) {\r\n                                    Toast.makeText(v.getContext(),getString(R.string.choice_canceled), Toast.LENGTH_SHORT).show();\r\n                                    currentSelectedPlace = null;\r\n                                    getUserSelectedRestaurant();\r\n                                    cancelAlarm();\r\n                                }\r\n                            })\r\n                            .addOnFailureListener(new OnFailureListener() {\r\n                                @Override\r\n                                public void onFailure(@NonNull Exception e) {\r\n                                    Toast.makeText(v.getContext(), getString(R.string.unable_to_cancel_choice), Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n        binding.detailsActivityFabBack.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getUserSelectedRestaurant() {\r\n        userManager.getUserData().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if (task.getResult().getData().get(SELECTED_RESTAURANT_ID) != null) {\r\n\r\n                    currentSelectedPlace = task.getResult().getData().get(SELECTED_RESTAURANT_ID).toString();\r\n\r\n                    if (currentSelectedPlace.equals(placeId)) {\r\n                        binding.detailsActivityFabSelectRestaurant.setImageDrawable(ResourcesCompat.getDrawable(getResources(), R.drawable.ic_baseline_check_circle_24, null));\r\n                        binding.detailsActivityFabSelectRestaurant.getDrawable().setColorFilter(getResources().getColor(R.color.green), PorterDuff.Mode.SRC_ATOP); //deprecated\r\n                    }\r\n                } else {\r\n                    binding.detailsActivityFabSelectRestaurant.setImageDrawable(ResourcesCompat.getDrawable(getResources(), R.drawable.ic_baseline_arrow_circle_up_24, null));\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void launchWebsite(View v) {\r\n        String url = v.getTag().toString();\r\n        Intent intent = new Intent(Intent.ACTION_VIEW).setData(Uri.parse(url));\r\n        startActivity(intent);\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        EasyPermissions.onRequestPermissionsResult(requestCode, permissions, grantResults, DetailsActivity.this);\r\n    }\r\n\r\n    @Override\r\n    public void onPermissionsGranted(int requestCode, @NonNull List<String> perms) {\r\n        callNow();\r\n    }\r\n\r\n    @Override\r\n    public void onPermissionsDenied(int requestCode, @NonNull List<String> perms) {\r\n        if (EasyPermissions.somePermissionPermanentlyDenied(this, perms)) {\r\n            new AppSettingsDialog.Builder(this).build().show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == AppSettingsDialog.DEFAULT_SETTINGS_REQ_CODE) {\r\n            callNow();\r\n        }\r\n    }\r\n\r\n    @SuppressLint(\"MissingPermission\")\r\n    private void callNow() {\r\n        // String phoneNumber = v.getTag().toString();\r\n\r\n        Intent callIntent = new Intent(Intent.ACTION_CALL);\r\n        callIntent.setData(Uri.parse(getString(R.string.tel) + phoneNumber));\r\n        try {\r\n            this.startActivity(callIntent);\r\n        } catch (Exception ex) {\r\n            Toast.makeText(getApplicationContext(),getResources().getString(R.string.call_error),\r\n                    Toast.LENGTH_LONG).show();\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@Nullable View parent, @NonNull String name, @NonNull Context context, @NonNull AttributeSet attrs) {\r\n        return super.onCreateView(parent, name, context, attrs);\r\n\r\n    }\r\n\r\n    private void registerAlarm() {\r\n\r\n        Intent notifyIntent = new Intent(this, AlarmReceiver.class);\r\n\r\n        final PendingIntent notifyPendingIntent = PendingIntent.getBroadcast\r\n                (this, NOTIFICATION_ID, notifyIntent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n\r\n        final AlarmManager alarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);\r\n\r\n        if (alarmManager != null) {\r\n            Calendar calendar = Calendar.getInstance();\r\n            long currentTime = calendar.getTimeInMillis();\r\n\r\n            calendar.set(Calendar.HOUR_OF_DAY, 12;\r\n            calendar.set(Calendar.MINUTE, 0);\r\n            calendar.set(Calendar.SECOND, 0);\r\n            // if the restaurant is chosen after 12:00 then the alarm is recorded for the next day\r\n            if (currentTime > calendar.getTimeInMillis()) {\r\n                calendar.add(Calendar.HOUR, 24);\r\n            }\r\n\r\n            alarmManager.set(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), notifyPendingIntent);\r\n            updateSharedPreferences();\r\n\r\n        }\r\n    }\r\n\r\n    private void cancelAlarm() {\r\n        NotificationManager notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);\r\n        notificationManager.cancelAll();\r\n\r\n        Intent notifyIntent = new Intent(this, AlarmReceiver.class);\r\n        final PendingIntent notifyPendingIntent = PendingIntent.getBroadcast\r\n                (this, NOTIFICATION_ID, notifyIntent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n        final AlarmManager alarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);\r\n        alarmManager.cancel(notifyPendingIntent);\r\n\r\n        clearSharedPreferences();\r\n    }\r\n\r\n    private void updateSharedPreferences() {\r\n        if (UserManager.getInstance().getCurrentUser() != null) {\r\n            sharedPreferences = getSharedPreferences(sharedPrefFile, MODE_PRIVATE);\r\n            SharedPreferences.Editor preferencesEditor = sharedPreferences.edit();\r\n            String Uid = UserManager.getInstance().getCurrentUser().getUid();\r\n            preferencesEditor.putString(UID_KEY, Uid);\r\n            preferencesEditor.apply();\r\n        }\r\n    }\r\n\r\n    private void clearSharedPreferences() {\r\n        sharedPreferences = getSharedPreferences(sharedPrefFile, MODE_PRIVATE);\r\n        SharedPreferences.Editor preferencesEditor = sharedPreferences.edit();\r\n        preferencesEditor.clear();\r\n        preferencesEditor.apply();\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/go4lunch/details/DetailsActivity.java b/app/src/main/java/com/example/go4lunch/details/DetailsActivity.java
--- a/app/src/main/java/com/example/go4lunch/details/DetailsActivity.java	
+++ b/app/src/main/java/com/example/go4lunch/details/DetailsActivity.java	
@@ -346,7 +346,7 @@
             Calendar calendar = Calendar.getInstance();
             long currentTime = calendar.getTimeInMillis();
 
-            calendar.set(Calendar.HOUR_OF_DAY, 12;
+            calendar.set(Calendar.HOUR_OF_DAY, 12);
             calendar.set(Calendar.MINUTE, 0);
             calendar.set(Calendar.SECOND, 0);
             // if the restaurant is chosen after 12:00 then the alarm is recorded for the next day
